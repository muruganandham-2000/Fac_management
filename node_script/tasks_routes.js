const express = require('express');
const router = express.Router();
const db = require('./db');

// Create a task
router.post('/tasks', (req, res) => {
    const taskName = req.body.task;

    // Assuming you have a function to insert the task into the database
    db.query('INSERT INTO tasks (task_name) VALUES (?)', [taskName], (err, result) => {
        if (err) {
            console.error('Error adding task: ' + err);
            res.status(500).json({ error: 'Error adding task' });
            return;
        }

        const taskId = result.insertId; // Get the ID generated by the database

        // Send the taskId along with the task data in the response
        res.status(200).json({ taskId, task: taskName });
    });
});



// Delete a task
router.delete('/tasks/:taskId', (req, res) => {
    const taskId = req.params.taskId;
    const sql = 'DELETE FROM pydatabase.tasks WHERE id = ?';
    db.query(sql, [taskId], (err, result) => {
        if (err) {
            console.error('Error deleting task: ' + err);
            res.status(500).json({ error: 'Error deleting task' });
            return;
        }
        res.status(200).json({ message: `Task ${taskId} deleted successfully` });
    });
});

router.patch('/tasks/:taskId', (req, res) => {
    const taskId = req.params.taskId;
    const completed = req.body.completed; // Assuming the updated completed status is sent in the request body

    // Update the task's completion status in the database
    // Example SQL query to update the completion status
    const sql = 'UPDATE pydatabase.tasks SET completed = ? WHERE id = ?';
    db.query(sql, [completed, taskId], (err, result) => {
        if (err) {
            console.error('Error updating task:', err);
            res.status(500).json({ error: 'Error updating task' });
            return;
        }
        
        // Assuming you want to send back a response after successful update
        res.status(200).json({ message: `Task ${taskId} updated successfully` });
    });
});

// Fetch all tasks
router.get('/tasks/today', (req, res) => {
    const now = new Date();
    const ISTOffset = 330 * 60 * 1000;
    const ISTTime = new Date(now.getTime() + ISTOffset);

    const today = ISTTime.toISOString().split('T')[0];

    const sql = `SELECT * FROM pydatabase.tasks WHERE DATE(created_at) = ? AND completed = 0`;
    db.query(sql, [today], (err, results) => {
        if (err) {
            console.error('Error fetching tasks: ' + err);
            res.status(500).json({ error: 'Error fetching tasks' });
            return;
        }
        res.status(200).json({ tasks: results });
    });
});


module.exports = router;